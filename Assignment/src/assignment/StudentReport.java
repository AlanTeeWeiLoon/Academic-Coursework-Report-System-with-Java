
package assignment;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Stream;
import javax.swing.JOptionPane;

public class StudentReport extends javax.swing.JFrame {

    /**
     * Creates new form StudentReport
     */
    public StudentReport() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back_btn = new javax.swing.JButton();
        Student_Id = new javax.swing.JTextField();
        Std_Id = new javax.swing.JLabel();
        ChooseIntake = new javax.swing.JComboBox<>();
        Intake = new javax.swing.JLabel();
        Program = new javax.swing.JLabel();
        ChooseProgram = new javax.swing.JComboBox<>();
        StudentReport = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        StdList = new javax.swing.JTextArea();
        SearchID = new javax.swing.JButton();
        PrintPDF = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Back_btn.setText("Back");
        Back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_btnActionPerformed(evt);
            }
        });

        Student_Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Student_IdActionPerformed(evt);
            }
        });

        Std_Id.setFont(new java.awt.Font("Cooper Black", 0, 13)); // NOI18N
        Std_Id.setText("Student Id :");

        ChooseIntake.setFont(new java.awt.Font("Cooper Black", 0, 13)); // NOI18N
        ChooseIntake.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year 1", "Year 2", "Year 3", "Year 4" }));
        ChooseIntake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseIntakeActionPerformed(evt);
            }
        });

        Intake.setFont(new java.awt.Font("Cooper Black", 0, 13)); // NOI18N
        Intake.setText("Intake :");

        Program.setFont(new java.awt.Font("Cooper Black", 0, 13)); // NOI18N
        Program.setText("Program :");

        ChooseProgram.setFont(new java.awt.Font("Cooper Black", 0, 13)); // NOI18N
        ChooseProgram.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Business Information System (BIS)", "Computer Science (CS)" }));

        StudentReport.setFont(new java.awt.Font("Cooper Black", 1, 36)); // NOI18N
        StudentReport.setText("Generate Student Report");

        StdList.setColumns(20);
        StdList.setRows(5);
        jScrollPane2.setViewportView(StdList);

        SearchID.setText("Search");
        SearchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchIDActionPerformed(evt);
            }
        });

        PrintPDF.setText("Print");
        PrintPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(StudentReport, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(52, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Std_Id, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Intake, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Program, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(PrintPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ChooseProgram, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ChooseIntake, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Student_Id)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SearchID, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StudentReport, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Program, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChooseProgram, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Intake, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChooseIntake, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SearchID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Student_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Std_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back_btn)
                    .addComponent(PrintPDF))
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_btnActionPerformed
        Educator_Page ep = new Educator_Page();
        ep.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_Back_btnActionPerformed

    private void Student_IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Student_IdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Student_IdActionPerformed

    private void ChooseIntakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseIntakeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChooseIntakeActionPerformed

    private void SearchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchIDActionPerformed

        String program = ChooseProgram.getSelectedItem().toString();
        String intake = ChooseIntake.getSelectedItem().toString();
        String temp =  "text.txt";
        String Filename = "StudentMarks.txt";
        File tempfile = new File(temp);

        String rl=null;
        StringBuilder bf = new StringBuilder();
        try {
            FileReader fr = new FileReader(Filename);
            BufferedReader br= new BufferedReader(fr);
            while((rl=br.readLine())!= null){
                rl=rl.trim();
                if(rl.indexOf(program)!= -1 && rl.indexOf(intake) != -1){bf.append(rl).append("\r\n");}
            }
            br.close();
            FileWriter fw =new FileWriter(temp);
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(bf.toString());
            bw.flush();
            bw.close();
            FileReader fr2 = new FileReader(new File(temp));
            BufferedReader br2 =new BufferedReader(fr2);
            StdList.read(br2, null);
            br.close();
            StdList.requestFocus();
            tempfile.delete();
        }
        catch(Exception e){}
    }//GEN-LAST:event_SearchIDActionPerformed

    private void PrintPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintPDFActionPerformed
        boolean status = false;
        try {

            String PDFlist[] = new String[20];
            String student = Student_Id.getText();
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(student +".pdf"));
            Scanner PDFStudent = new Scanner(new File("StudentMarks.txt"));
            document.open();

            while(PDFStudent.hasNextLine()){
                String PdfAll = PDFStudent.nextLine();
                String[] PDF = PdfAll.split(", ", 0);
                if(student.equalsIgnoreCase(PDF[0])){
                    PDFlist[0]=PDF[0];
                    PDFlist[1]=PDF[1];
                    PDFlist[2]=PDF[2];
                    PDFlist[3]=PDF[3];
                    status=true;
                }
            }

            if (status) {
                document.add(new Paragraph("Student Report"));
                document.add(new Paragraph("--------------------------------------------------------------------"));
                document.add(new Paragraph("NAME: " + PDFlist[1]));
                document.add(new Paragraph("TP NUMBER: " + PDFlist[0]));
                document.add(new Paragraph("Program: " + PDFlist[2]));
                document.add(new Paragraph("INTAKE: " + PDFlist[3]));
                document.add(new Paragraph("\n" ));

                PdfPTable table = new PdfPTable(6);

                addTableHeader(table);
                addRows(table);

                document.add(table);
                document.close();
                JOptionPane.showMessageDialog(null, "Report Generated Success","Comfirmation Message",JOptionPane.INFORMATION_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(null, "Student Id not found","Error Message",JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (DocumentException ignore) {

        }catch (FileNotFoundException e)
        {
            e.printStackTrace();
        }
        }

        private static void addTableHeader(PdfPTable table) {
            Stream.of("MODULE", "QUIZ MARK", "LAB TEST MARK", "ASSIGNMENT MARK", "FINAL MARK", "COMMENT")
            .forEach(columnTitle -> {
                PdfPCell header = new PdfPCell();
                header.setBackgroundColor(BaseColor.LIGHT_GRAY);
                header.setBorderWidth(1);
                header.setPhrase(new Phrase(columnTitle));
                table.addCell(header);
            });
        }

        private void addRows(PdfPTable table) {
            try {
                Scanner c = new Scanner(new File("StudentMarks.txt"));
                String student1 = Student_Id.getText();
                while(c.hasNextLine()){
                    String StudentDetail =  c.nextLine();
                    String[] temp = StudentDetail.split(", ", 0);
                    if(student1.equalsIgnoreCase(temp[0])){
                        table.addCell(temp[4]);
                        table.addCell(temp[5]);
                        table.addCell(temp[6]);
                        table.addCell(temp[7]);
                        table.addCell(temp[8]);
                        table.addCell(temp[9]);
                    }
                }
            }
            catch (FileNotFoundException ex) {
            }
    }//GEN-LAST:event_PrintPDFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back_btn;
    private javax.swing.JComboBox<String> ChooseIntake;
    private javax.swing.JComboBox<String> ChooseProgram;
    private javax.swing.JLabel Intake;
    private javax.swing.JButton PrintPDF;
    private javax.swing.JLabel Program;
    private javax.swing.JButton SearchID;
    private javax.swing.JTextArea StdList;
    private javax.swing.JLabel Std_Id;
    private javax.swing.JLabel StudentReport;
    private javax.swing.JTextField Student_Id;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
